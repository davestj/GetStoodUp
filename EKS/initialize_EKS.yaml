---
AWSTemplateFormatVersion: '2010-09-09'
Description: EKS Cluster with associated resources

Parameters:
  EKSClusterName:
    Type: String
    Description: Name for the EKS cluster
  ECRRepositoryARN:
    Type: String
    Description: ARN of the associated ECR repository
  InitialUsername:
    Type: String
    Description: Initial username to create with Secrets Manager
  InitialPassword:
    Type: String
    Description: Initial password to create with Secrets Manager
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of the EC2 Key Pair for SSH access to worker nodes
  ClusterVersion:
    Type: String
    Description: Version of the EKS cluster
    Default: 1.20
  DesiredCapacity:
    Type: Number
    Description: Desired number of worker nodes in the EKS cluster
    Default: 2

  MaxSize:
    Type: Number
    Description: Maximum number of worker nodes in the EKS cluster
    Default: 3

  MinSize:
    Type: Number
    Description: Minimum number of worker nodes in the EKS cluster
    Default: 1

  InstanceType:
    Type: String
    Description: EC2 instance type for the worker nodes
    Default: t3.medium

Resources:
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref EKSClusterName
      Version: '1.20'  # Replace with desired EKS version
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref EKSSecurityGroup
        SubnetIds:
          - !Ref EKSSubnet1
          - !Ref EKSSubnet2
          - !Ref EKSSubnet3

  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EKSClusterRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: sts:AssumeRole

  EKSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EKSServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  EKSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EKS cluster
      VpcId: !Ref EKSVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
  EKSVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: EKSVpc

  EKSSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EKSVpc
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: EKSSubnet1

  EKSSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EKSVpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: EKSSubnet2

  EKSSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EKSVpc
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [2, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: EKSSubnet3

  NLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: EKSNLB
      Scheme: internet-facing
      Type: network
      Subnets:
        - !Ref EKSSubnet1
        - !Ref EKSSubnet2
        - !Ref EKSSubnet3

  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      IsLogging: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      S3BucketName: !Ref CloudTrailBucket

  CloudTrailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: my-cloudtrail-bucket
      VersioningConfiguration:
        Status: Enabled

  SecretsManagerSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref EKSClusterName-Secret
      SecretString: ''{"username": "' + !Ref InitialUsername + '", "password": "' + !Ref InitialPassword + '"}''

  FargateProfile:
    Type: AWS::EKS::FargateProfile
    Properties:
      ClusterName: !Ref EKSClusterName
      FargateProfileName: FargateProfile
      PodExecutionRoleArn: !GetAtt FargateExecutionRole.Arn
      SubnetIds:
        - !Ref EKSSubnet1
        - !Ref EKSSubnet2
        - !Ref EKSSubnet3
      Selectors:
        - Namespace: default
          Labels:
            type: fargate

  FargateExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: FargateExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks-fargate-pods.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy

Outputs:
  EKSClusterNameOutput:
    Description: EKS cluster name
    Value: !Ref EKSClusterName
    Export:
      Name: !Sub "${AWS::StackName}-EKSClusterName"

  ECRRepositoryARNOutput:
    Description: ECR repository ARN
    Value: !Ref ECRRepositoryARN
    Export:
      Name: !Sub "${AWS::StackName}-ECRRepositoryARN"

  CloudTrailBucketNameOutput:
    Description: CloudTrail bucket name
    Value: !Ref CloudTrailBucket
    Export:
      Name: !Sub "${AWS::StackName}-CloudTrailBucket"
  SecurityGroupId:
    Description: Security Group ID of the EKS Security Group
    Value: !Ref EKSSecurityGroup
    Export:
      Name: EksSecurityGroupId
